---

kind: pipeline
type: docker
name: latest

platform:
  os: linux
  arch: amd64

steps:
- name: Lint Dockerfile
  image: hadolint/hadolint:latest-alpine
  pull: if-not-exists
  commands:
    - hadolint --version
    - hadolint Dockerfile*

- name: latest  
  image: thegeeklab/drone-docker-buildx
  privileged: true
  settings:
    repo: modem7/docker-starwars
    purge: true
    compress: true
    use_cache: true
    cache_from: "modem7/docker-starwars:latest"
    platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    tags: latest

- name: slack
  image: themaz/drone-slack
  settings:
    webhook:
      from_secret: slack_hook
  when:
    status: [ success, failure ]

# trigger:
  # event:
    # - cron
  # cron:
    # - starwars_latest

---

kind: pipeline
type: docker
name: monthly

platform:
  os: linux
  arch: amd64

steps:
- name: Lint Dockerfile
  image: hadolint/hadolint:latest-alpine
  pull: if-not-exists
  commands:
    - hadolint --version
    - hadolint Dockerfile*

- name: monthly  
  image: thegeeklab/drone-docker-buildx
  privileged: true
  settings:
    repo: modem7/docker-starwars
    purge: true
    compress: true
    use_cache: true
    cache_from: "modem7/docker-starwars:monthly"
    platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    tags: monthly

- name: slack
  image: themaz/drone-slack
  settings:
    webhook:
      from_secret: slack_hook
  when:
    status: [ success, failure ]

trigger:
  event:
  - cron
  cron:
  - starwars_monthly

---

kind: pipeline
type: docker
name: stable

platform:
  os: linux
  arch: amd64

steps:
- name: Lint Dockerfile
    image: hadolint/hadolint:latest-alpine
    pull: if-not-exists
    commands:
      - hadolint --version
      - hadolint Dockerfile*

- name: stable  
  image: thegeeklab/drone-docker-buildx
  privileged: true
  settings:
    repo: modem7/docker-starwars
    purge: true
    compress: true
    use_cache: true
    cache_from: "modem7/docker-starwars:stable"
    platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    tags: stable

- name: slack
  image: themaz/drone-slack
  settings:
    webhook:
      from_secret: slack_hook
  when:
    status: [ success, failure ]

trigger:
  event:
  - cron
  cron:
  - starwars_stable

# ---

# # Doesn't work currently - https://github.com/christian-korneck/docker-pushrm/blob/master/README.md#limitations
# # https://github.com/docker/roadmap/issues/115

# kind: pipeline
# type: docker
# name: readme

# steps:
# - name: pushrm-dockerhub
  # image: chko/docker-pushrm
  # environment:
    # DOCKER_PASS:
      # from_secret: DOCKER_PASS
    # DOCKER_USER:
      # from_secret: DOCKER_USER
    # PUSHRM_FILE: README.md
    # PUSHRM_SHORT: A DNS server container using several UK/European DoH resolution services via DNSCrypt Proxy
    # PUSHRM_TARGET: modem7/dnscrypt-proxy
  # when:
    # status:
    # - success